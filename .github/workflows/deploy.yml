name: Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  deploy-app:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app:latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: app
          push: true
          cache-from: type=gha,scope=app
          cache-to: type=gha,mode=max,scope=app
          tags: ${{ env.DOCKER_IMAGE }}
  run-app:
    needs: deploy-app
    runs-on: ubuntu-latest
    env:
      NAME: mdtp-gallery-app
      VERSION: ${{ github.sha }}
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app:latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MDTPBOX_URL }}
          username: ${{ secrets.MDTPBOX_USER }}
          key: ${{ secrets.MDTPBOX_SSH_KEY }}
          port: ${{ secrets.MDTPBOX_PORT }}
          envs: DOCKER_IMAGE,NAME,VERSION
          script_stop: true
          script: |
            url="mdtp-gallery.tokenpage.xyz"
            varsFile=~/.${NAME}.vars
            docker pull ${DOCKER_IMAGE}
            docker stop ${NAME} && docker rm ${NAME} || true
            docker run \
              --name ${NAME} \
              --detach \
              --publish-all \
              --restart on-failure \
              --env NAME=${NAME} \
              --env VERSION=${VERSION} \
              --env VIRTUAL_HOST=${url} \
              --env LETSENCRYPT_HOST=${url} \
              --env-file ${varsFile} \
              ${DOCKER_IMAGE}
  deploy-app-sprites:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app-sprites:latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to GitHub container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build docker image
        run: docker build --tag $DOCKER_IMAGE --build-arg KRT_PROJECT=sprites .
      - name: Push to container registry
        run: docker push $DOCKER_IMAGE
  run-app-sprites:
    needs: deploy-app-sprites
    runs-on: ubuntu-latest
    env:
      NAME: sprites-gallery-app
      VERSION: ${{ github.sha }}
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app-sprites:latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MDTPBOX_URL }}
          username: ${{ secrets.MDTPBOX_USER }}
          key: ${{ secrets.MDTPBOX_SSH_KEY }}
          port: ${{ secrets.MDTPBOX_PORT }}
          envs: DOCKER_IMAGE,NAME,VERSION
          script_stop: true
          script: |
            url="sprites-gallery.tokenpage.xyz"
            varsFile=~/.${NAME}.vars
            docker pull ${DOCKER_IMAGE}
            docker stop ${NAME} && docker rm ${NAME} || true
            docker run \
              --name ${NAME} \
              --detach \
              --publish-all \
              --restart on-failure \
              --env NAME=${NAME} \
              --env VERSION=${VERSION} \
              --env VIRTUAL_HOST=${url} \
              --env LETSENCRYPT_HOST=${url} \
              --env-file ${varsFile} \
              ${DOCKER_IMAGE}
  deploy-app-goblintown:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app-goblintown:latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to GitHub container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build docker image
        run: docker build --tag $DOCKER_IMAGE --build-arg KRT_PROJECT=goblintown .
      - name: Push to container registry
        run: docker push $DOCKER_IMAGE
  run-app-goblintown:
    needs: deploy-app-goblintown
    runs-on: ubuntu-latest
    env:
      NAME: goblintown-gallery-app
      VERSION: ${{ github.sha }}
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}-app-goblintown:latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MDTPBOX_URL }}
          username: ${{ secrets.MDTPBOX_USER }}
          key: ${{ secrets.MDTPBOX_SSH_KEY }}
          port: ${{ secrets.MDTPBOX_PORT }}
          envs: DOCKER_IMAGE,NAME,VERSION
          script_stop: true
          script: |
            url="goblintown-gallery.tokenpage.xyz"
            varsFile=~/.${NAME}.vars
            docker pull ${DOCKER_IMAGE}
            docker stop ${NAME} && docker rm ${NAME} || true
            docker run \
              --name ${NAME} \
              --detach \
              --publish-all \
              --restart on-failure \
              --env NAME=${NAME} \
              --env VERSION=${VERSION} \
              --env VIRTUAL_HOST=${url} \
              --env LETSENCRYPT_HOST=${url} \
              --env-file ${varsFile} \
              ${DOCKER_IMAGE}
